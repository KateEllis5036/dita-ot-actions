<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="test-suite-files">
    <title>Test suite files</title>
    <body>
        <section id="bootstrap.xml-file">
           <title><codeph>bootstrap.xml</codeph> file
            </title>
            <p>
               At the root of the tests lies a <codeph>bootstrap.xml</codeph> file which
               references the <codeph>antlib.xml</codeph> library as shown:
            </p>
            <codeblock scale="80" outputclass="language-xml"><coderef href="./src/bootstrap.xml"/></codeblock>
            <ul>
                <li>
                   The location of <parmname>test.root.dir</parmname> must be set - this allows the
                   expecation of a single test to be updated directly from the command line
                   independently of the test harness.
                </li>
                <li>
                   The location of <parmname>dita.dir</parmname> must be set - this allows a single
                   test to be run directly from the command line independently of the test harness.
                </li>
                <li>
                   The functions from the unit-test <codeph>antlib.xml</codeph> must be loaded
                   using the <xmlelement>typedef</xmlelement> task.
                </li>
            </ul>
        </section>
        <section id="coverage.xml-file">
           <title><codeph>coverage.xml</codeph> file
            </title>
            <p>
               A token coverage file consists of a list of XML elements or string literals
               which should be present in a test-suiteâ€™s outputs. For example, PDF tests
               should cover all possible fop element and attributes.
            </p>
            <codeblock scale="80" outputclass="language-xml"><coderef href="./src/coverage.xml"/></codeblock>
        </section>
        <section id="template-coverage.xml-file">
           <title><codeph>template-coverage.xml</codeph> file
            </title>
            <p>
               An XSL coverage file consists of a list of XSL elements which are present within
               a plug-in. This file is generated by the <option>xsl-instrument</option> transform.
            </p>
            <codeblock scale="80" outputclass="language-xml"><coderef href="./src/template-coverage.xml"/></codeblock>
        </section>
        <section id="disabled.txt-file">
           <title><codeph>disabled.txt</codeph> file
            </title>
            <p>
               If a <codeph>disabled.txt</codeph> file is present within a test suite
               directory, none of the tests within the directory will be run.
            </p>
        </section>
        <section id="overrides-for-attributes.xml-colors.xml-and-fonts.xml">
           <title>Overrides for
           <codeph>attributes.xml</codeph>, <codeph>colors.xml</codeph> and <codeph>fonts.xml</codeph>
            </title>
            <p>
               The <codeph>cfg</codeph> directory of the plug-in holds standard lists of fonts,
               colors and attributes to replace when running PDF tests - this can be
               overridden by individuals test or test suites if necessary by placing an
               equivalent override file in the test directory or test-suite directory.
            </p>
        </section>
        <section id="overrides-for-test.properties">
           <title>Overrides for <codeph>test.properties</codeph>
            </title>
            <p>
               Additional test properties can be passed to DITA-OT when each test is run if a
               <codeph>test.properties</codeph> file is present in the test directory or
               test-suite directory. The name of the file to search for can also be altered.
               See <xref
               href="http://www.dita-ot.org/3.0/topics/using-dita-properties-file.html"
               format="html" scope="external">Setting build parameters with <codeph>.properties</codeph>
               files</xref> for more details.
            </p>
        </section>
    </body>
</topic>