<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="doxygen-plug-in">
    <title>doxygen Plug-in</title>
    <abstract>
        <shortdesc>
           This is a <xref href="https://www.dita-ot.org/plugins" format="html" scope="external">DITA-OT Plug-in</xref>  used to auto-create valid DITA-based Doxygen documentation.
           The initial source of the documentation can be generated directly using the
           <xref
        href="http://www.doxygen.nl/manual/customize.html#xmlgenerator"
        format="html"
        scope="external"
      >Doxygen XML</xref> documentation. The XML file can be added to the source and processed as if it had been written in DITA.
        </shortdesc>
        <p>
        </p>
    </abstract>
    <prolog>
        <metadata>
            <keywords>
                <indexterm>dOxygen</indexterm>
                <indexterm>plug-in</indexterm>
            </keywords>
        </metadata>
    </prolog>
    <body/>
    <topic id="example">
        <title>Example</title>
        <body>
            <div outputclass="row">
               <div>
                    <image
            deliveryTarget="html"
            scope="external"
            href="https://jason-fox.github.io/fox.jason.passthrough.doxygen/doxygen-logo.png"
            outputclass="float-start mt-1 me-3"
            height="55"
          />
                    <p>
                       <term>dOxygen</term> is a tool that parses the declarations and
                        documentation comments in a set of source files and produces a set of HTML pages describing the classes, interfaces,
                        constructors, methods, and fields.
                    </p>
                </div>
            </div>
            <p>
               <term>doxygen</term> supports doclets used to customize doxygen output. A doclet
               is a program written with the Doclet API that specifies the content and format
               of the output to be generated by the doxygen tool.
            </p>
            <p>
               A library exists to preprocess doxygen comments from Java source code to a XML
               document. It can be downloaded <xref href="https://github.com/markusbernhardt/xml-doclet" format="html" scope="external">here</xref>.
               This DITA-OT plugin processes a doxygen XML and the converts it to DITA
               allowing the generation of PDF API documentation.
            </p>
            <fig id="sample-doxygen">
                <title>Sample doxygen</title>
                <codeblock scale="80" outputclass="language-c++">namespace transport
{
    /** Mountain bike implementation of a `Bicycle`.
     *
     * MountainBike is an implementation of a Bicycle
     * providing a bike for cycling on rough terrain. Mountain bikes
     * are pretty cool because they have stuff like **Suspension** (and
     * you can even adjust it using SetSuspension). If you're looking
     * for a bike for use on the road, you might be better off using a
     * RacingBike though.
     *
     * @ingroup mountainbike
     */
    class MountainBike : public Bicycle
    {
    public:
        /** Set suspension stiffness.
         * @stiffness the suspension stiffness.
         *
         * SetSuspension changes the stiffness of the suspension
         * on the bike. The method will return false if the stiffness
         * could not be adjusted.
         *
         * @return true if the suspension was adjusted successfully,
         *         false otherwise.
         */
        bool SetSuspension(double stiffness);</codeblock>
            </fig>
            <fig>
                <title>doxygen PDF Output</title>
                <image outputclass="img-thumbnail" scalefit="yes" href="https://jason-fox.github.io/fox.jason.passthrough.doxygen/doxygen-output.png" scope="external">
                    <alt/>
                </image>
            </fig>
        </body>
    </topic>
    <topic id="install" conref="./install.dita#install">
        <title/>
        <body/>
    </topic>
    <topic id="usage" conref="./usage.dita#usage">
        <title/>
        <body/>
    </topic>
</topic>
